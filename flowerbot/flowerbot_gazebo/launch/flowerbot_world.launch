<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="true"/>


  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find flowerbot_gazebo)/worlds/flowerbot.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <arg name="urdf_file" default="$(find xacro)/xacro --inorder '$(find flowerbot_description)/urdf/flowerbot.urdf.xacro' configuration_file:=$(find robot_base)/robot_config/2wd2ws_config.yaml" />
  <param name="robot_description" command="$(arg urdf_file)" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model flowerbot -param robot_description"/>

  <!-- convert joint states to TF transforms for rviz, etc -->
  <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
    <remap from="/joint_states" to="/flowerbot/joint_states" />
  </node> -->

  <!-- ros_control flowerbot launch file -->
  <include file="$(find flowerbot_control)/launch/flowerbot_control.launch" />

</launch>
